/**
 * Box Sizing Mixin
 *
 * @mixin
 *  @param $type
 *      $type can be defined as box-sizing
 *  @example
 *      @include box-sizing;
 *      @include box-sizing(content-box);
 */

 @mixin box-sizing($type: border-box){
     box-sizing: $type;
 }

 /**
 * Generate Padding Using $values...
 *
 * @mixin
 *  @param $values
 *      Pass in the values used to add padding to an element
 *  @example 
 *       @include padding(2px 4px 6px);
 * 
 *
 */

 



/**
 * Container Styles
 *
 * @mixin
 *  @param $width
 *      Define the width of your conainer
 *  @param $height
 *      Define the height of your container
 *  @param $background
 *      Define the background of your container
 *  @example
 *      @Include box(120px,120px,fuscia)
 *
 */


 
 
 /// Base Font Size
$base-font-size: 16px;

 /// Base Line Height
$base-line-height: 24px;

/// Breakpoints
$breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px
);
 

/*============================================================================*\

    B. Mixins

    Basic Mixins to make life easier

    @date: Tuesday May 1, 2018 -11:07 PM
    @author: Dylan Burkey


\*============================================================================*/


/**
 *  Media Query Mixin
 *
 *  @date: Tuesday May 1, 2018 - 11:12 PM
 *  @author: Dyan Burkey
 *
 */ 

@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

.top {
    color: blue;
    @include mq('tablet-wide') {
       color: red;
    }
}